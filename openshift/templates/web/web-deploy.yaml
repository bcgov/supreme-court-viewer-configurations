---
apiVersion: v1
kind: Template
metadata:
  annotations:
    description: Deployment template for an nginx container
    tags: nginx
  name: ${NAME}
objects:
  - kind: DeploymentConfig
    apiVersion: v1
    metadata:
      creationTimestamp:
      labels:
        name: ${NAME}${SUFFIX}
        app: ${APP_NAME}
        app-group: ${APP_GROUP}
        role: ${ROLE}
        env: ${TAG_NAME}
      name: ${NAME}${SUFFIX}
    spec:
      replicas: 2
      selector:
        name: ${NAME}${SUFFIX}
        deploymentconfig: ${NAME}${SUFFIX}
      strategy:
        rollingParams:
          intervalSeconds: 1
          maxSurge: 25%
          maxUnavailable: 25%
          timeoutSeconds: 600
          updatePeriodSeconds: 1
        type: Rolling
      template:
        metadata:
          creationTimestamp:
          labels:
            name: ${NAME}${SUFFIX}
            app: ${APP_NAME}
            app-group: ${APP_GROUP}
            role: ${ROLE}
            env: ${TAG_NAME}
            deploymentconfig: ${NAME}${SUFFIX}
        spec:
          volumes:
            - name: ${NAME}${SUFFIX}-${BLACK_LIST_CONFIG_MAP_NAME}-volume
              configMap:
                name: ${BLACK_LIST_CONFIG_MAP_NAME}${SUFFIX}
                items:
                  - key: ${BLACK_LIST_CONFIG_FILE_NAME}
                    path: ${BLACK_LIST_CONFIG_FILE_NAME}
            - name: ${NAME}${SUFFIX}-${NGINX_CONF_TEMPLATE_CONFIG_MAP_NAME}-volume
              configMap:
                name: ${NGINX_CONF_TEMPLATE_CONFIG_MAP_NAME}${SUFFIX}
                items:
                  - key: ${NGINX_CONF_TEMPLATE_FILE_NAME}
                    path: ${NGINX_CONF_TEMPLATE_FILE_NAME}
          containers:
            - image: ${NAME}${SUFFIX}
              imagePullPolicy: Always
              name: ${NAME}${SUFFIX}
              ports:
                - containerPort: 8080
                  protocol: TCP
              env:
                - name: API_URL
                  value: ${API_URL}
                - name: API_SERVICE_NAME
                  value: ${API_SERVICE_NAME}
                - name: API_PATH
                  value: ${API_PATH}
                - name: WEB_BASE_HREF
                  value: ${WEB_BASE_HREF}
                - name: RealIpFrom
                  value: ${REAL_IP_FROM}
                - name: AdditionalRealIpFromRules
                  value: ${AdditionalRealIpFromRules}
                - name: IpFilterRules
                  value: ${IpFilterRules}
                - name: HTTP_BASIC
                  value: ${HTTP_BASIC}
                - name: HTTP_BASIC_USERNAME
                  valueFrom:
                    secretKeyRef:
                      name: ${API_SERVICE_NAME}
                      key: api-user
                - name: HTTP_BASIC_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: ${API_SERVICE_NAME}
                      key: api-password
                - name: IncludeSiteminderHeaders
                  value: ${INCLUDE_SITEMINDER_HEADERS}
              resources:
                requests:
                  cpu: ${CPU_REQUEST}
                  memory: ${MEMORY_REQUEST}
                limits:
                  cpu: ${CPU_LIMIT}
                  memory: ${MEMORY_LIMIT}
              volumeMounts:
                - name: ${NAME}${SUFFIX}-${BLACK_LIST_CONFIG_MAP_NAME}-volume
                  mountPath: ${BLACK_LIST_CONFIG_MOUNT_PATH}${BLACK_LIST_CONFIG_FILE_NAME}
                  subPath: ${BLACK_LIST_CONFIG_FILE_NAME}
                - name: ${NAME}${SUFFIX}-${NGINX_CONF_TEMPLATE_CONFIG_MAP_NAME}-volume
                  mountPath: ${NGINX_CONF_TEMPLATE_MOUNT_PATH}${NGINX_CONF_TEMPLATE_FILE_NAME}
                  subPath: ${NGINX_CONF_TEMPLATE_FILE_NAME}
              livenessProbe:
                httpGet:
                  path: /nginx_status
                  port: 8080
                  scheme: HTTP
                initialDelaySeconds: 30
                timeoutSeconds: 60
                periodSeconds: 10
                successThreshold: 1
                failureThreshold: 3
              readinessProbe:
                httpGet:
                  path: /nginx_status
                  port: 8080
                  scheme: HTTP
                initialDelaySeconds: 10
                timeoutSeconds: 60
                periodSeconds: 10
                successThreshold: 1
                failureThreshold: 3
          dnsPolicy: ClusterFirst
          restartPolicy: Always
          securityContext: {}
          terminationGracePeriodSeconds: 30
      test: false
      triggers:
        - type: ConfigChange
        - type: ImageChange
          imageChangeParams:
            automatic: true
            containerNames:
              - ${NAME}${SUFFIX}
            from:
              kind: ImageStreamTag
              namespace: ${IMAGE_NAMESPACE}
              name: ${NAME}:${TAG_NAME}

  - kind: Service
    apiVersion: v1
    metadata:
      creationTimestamp:
      labels:
        name: ${NAME}${SUFFIX}
        app: ${APP_NAME}
        app-group: ${APP_GROUP}
        role: ${ROLE}
        env: ${TAG_NAME}
      name: ${NAME}${SUFFIX}
    spec:
      ports:
        - name: 8080-tcp
          port: 8080
          protocol: TCP
          targetPort: 8080
      selector:
        name: ${NAME}${SUFFIX}
        deploymentconfig: ${NAME}${SUFFIX}
      sessionAffinity: None
      type: ClusterIP

  - kind: Route
    apiVersion: v1
    metadata:
      name: ${NAME}${SUFFIX}
      labels:
        name: ${NAME}${SUFFIX}
        app: ${APP_NAME}
        app-group: ${APP_GROUP}
        role: ${ROLE}
        env: ${TAG_NAME}
      annotations:
        haproxy.router.openshift.io/ip_whitelist: ${ALLOW_LIST}
        haproxy.router.openshift.io/timeout: ${ROUTE_TIMEOUT}
    spec:
      host: ${APPLICATION_DOMAIN}
      port:
        targetPort: 8080-tcp
      tls:
        insecureEdgeTerminationPolicy: Redirect
        termination: edge
      to:
        kind: Service
        name: ${NAME}${SUFFIX}
        weight: 100

  - kind: HorizontalPodAutoscaler
    apiVersion: autoscaling/v1
    metadata:
      name: ${NAME}${SUFFIX}
      labels:
        name: ${NAME}${SUFFIX}
        app: ${APP_NAME}
        app-group: ${APP_GROUP}
        role: ${ROLE}
        env: ${TAG_NAME}
    spec:
      scaleTargetRef:
        kind: DeploymentConfig
        name: ${NAME}${SUFFIX}
      minReplicas: ${{MIN_REPLICAS}}
      maxReplicas: ${{MAX_REPLICAS}}

  - kind: NetworkSecurityPolicy
    apiVersion: secops.pathfinder.gov.bc.ca/v1alpha1
    metadata:
      name: custom-${NAME}${SUFFIX}-policy
      labels:
        name: custom-${NAME}${SUFFIX}-policy
        app: ${APP_NAME}
        app-group: ${APP_GROUP}
        role: ${ROLE}
        env: ${TAG_NAME}
    spec:
      description: Allow the web application to talk to the api.
      source:
        - - role=${ROLE}
          - app=${APP_NAME}${SUFFIX}
          - env=${TAG_NAME}
          - $namespace=${NAMESPACE_NAME}-${TAG_NAME}
      destination:
        - - role=api
          - app=${APP_NAME}${SUFFIX}
          - env=${TAG_NAME}
          - $namespace=${NAMESPACE_NAME}-${TAG_NAME}

  - kind: NetworkSecurityPolicy
    apiVersion: secops.pathfinder.gov.bc.ca/v1alpha1
    metadata:
      name: custom-${APP_GROUP}-pods-to-api
      labels:
        name: custom-${APP_GROUP}-pods-to-api
        app: ${APP_NAME}
        app-group: ${APP_GROUP}
        role: ${ROLE}
        env: ${TAG_NAME}
    spec:
      description: |
        Allow pods to talk to the internal api so deployments work.
        This only needs to be specified once per environment.
      source:
        - - $namespace=${NAMESPACE_NAME}-${TAG_NAME}
      destination:
        - - int:network=internal-cluster-api-endpoint

  - kind: Secret
    apiVersion: v1
    metadata:
      name: ${NAME}${SUFFIX}
      labels:
        name: ${NAME}${SUFFIX}
        app: ${APP_NAME}
        app-group: ${APP_GROUP}
        role: ${ROLE}
        env: ${TAG_NAME}
    stringData:
      allow-list: ${ALLOW_LIST}
    type: Opaque

parameters:
  - description:
      The name assigned to all of the openshift objects defined in this template.
      It is also the name of runtime image you want.
    displayName: Name
    name: NAME
    required: true
    value: web
  - name: SUFFIX
    displayName: Suffix
    description: A name suffix used for all objects
    required: false
    value:
  - name: APP_NAME
    displayName: App Name
    description: Used to group components together in the OpenShift console.
    required: true
    value: Supreme-Court-Viewer
  - name: APP_GROUP
    displayName: App Group
    description: The name assigned to all of the deployments in this project.
    required: true
    value: scv
  - name: NAMESPACE_NAME
    displayName: Namespace Name
    description: The base namespace name for the project.
    required: true
    value: ovjbim
  - name: ROLE
    displayName: Role
    description:
      The role of this service within the application - used for Network
      Policies
    required: true
    value: web
  - description: The namespace where to get the above image name
    displayName: Image Namespace
    name: IMAGE_NAMESPACE
    required: true
    value: ovjbim-tools
  - description:
      OpenShift cluster private IP range in CIDR notation, used by Nginx
      ngx_http_realip_module.
    displayName: OpenShift Cluster IP Range
    name: REAL_IP_FROM
    required: true
    value: 172.51.0.0/16
  - description:
      The default URL to use when proxying requests to the application's
      API.  The value here will be overridden if a API_SERVICE_NAME is defined.
    displayName: API URL
    name: API_URL
    required: true
    value: http://api:8080/api
  - description:
      The name of the service endpoint for the API.  Used to wire up to an
      API endpoint within the same project; overriding the URL defined by API_URL.
    displayName: API Service Name
    name: API_SERVICE_NAME
    required: false
    value: api
  - description: The root path for the API.  Used in conjunction with API_SERVICE_NAME.
    displayName: API Path
    name: API_PATH
    required: true
    value: /api
  - name: WEB_BASE_HREF
    displayName: Web Base Href
    description: The application host path (Web Base Href).
    value: /scjscv/
  - description:
      Additional known and trusted reverse proxy ips conforming to nginx
      set_real_ip_from directive syntax. Multiple directives are allowed, separated
      by semicolon.
    displayName: Additional real_ip_from Rules
    name: AdditionalRealIpFromRules
  - description: Nginx ngx_http_access_module ip filter rules
    displayName: Ip Filter Rules
    name: IpFilterRules
    value:
  - name: BLACK_LIST_CONFIG_FILE_NAME
    displayName: Config File Name
    description: The name of the configuration file.
    required: true
    value: blacklist.conf
  - name: BLACK_LIST_CONFIG_MAP_NAME
    displayName: Config Map Name
    description: The name of the configuration map.
    required: true
    value: blacklist-conf
  - name: BLACK_LIST_CONFIG_MOUNT_PATH
    displayName: Config Mount Path
    description: The path to use to mount the config file.
    required: true
    value: /etc/nginx/
  - name: NGINX_CONF_TEMPLATE_FILE_NAME
    displayName: Config File Name
    description: The name of the configuration file.
    required: true
    value: nginx.conf.template
  - name: NGINX_CONF_TEMPLATE_CONFIG_MAP_NAME
    displayName: Config Map Name
    description: The name of the configuration map.
    required: true
    value: nginx-conf-template
  - name: NGINX_CONF_TEMPLATE_MOUNT_PATH
    displayName: Config Mount Path
    description: The path to use to mount the config file.
    required: true
    value: /tmp/

  - description:
      The exposed hostname that will route to the service, e.g., myappname.pathfinder.gov.bc.ca,
      if left blank a value will be defaulted.
    displayName: Application Hostname
    name: APPLICATION_DOMAIN
    value: supreme-court-viewer-dev.pathfinder.gov.bc.ca

  - name: ALLOW_LIST
    displayName: Allow List
    description: The list containing all of the trusted IPs for the site.
    required: false
  - name: ROUTE_TIMEOUT
    displayName: Route Timeout
    description:
      The timeout for the application route.  When this timeout is exceeded
      the application's route will respond with a 504 Gateway Timeout error.
    required: true
    value: 60s

  - name: INCLUDE_SITEMINDER_HEADERS
    displayName: Include Siteminder Headers
    description: Flag to indicate whether Siteminder headers should be allowed to pass through.
    required: true
    value: "false"

  - description: The TAG name for this environment, e.g., dev, test, prod
    displayName: Env TAG name
    name: TAG_NAME
    value: dev
  - description:
      For very simple HTTP Basic authentication, use %HTTP_BASIC% in your
      nginx config and provide the value here that you want in nginx config, e.g., `auth_basic
      'restricted';`
    displayName: HTTP Basic Nginx Config Line
    name: HTTP_BASIC
    value:
  - name: MIN_REPLICAS
    displayName: Minimum Replicas
    description: The minimum number of pods to have running.
    required: true
    value: "1"
  - name: MAX_REPLICAS
    displayName: Maximum Replicas
    description: The maximum number of pods to have running.
    required: true
    value: "4"
  - name: CPU_REQUEST
    displayName: Resources CPU Request
    description: The resources CPU request (in cores) for this build.
    required: true
    value: 10m
  - name: CPU_LIMIT
    displayName: Resources CPU Limit
    description: The resources CPU limit (in cores) for this build.
    required: true
    value: 250m
  - name: MEMORY_REQUEST
    displayName: Resources Memory Request
    description: The resources Memory request (in Mi, Gi, etc) for this build.
    required: true
    value: 100Mi
  - name: MEMORY_LIMIT
    displayName: Resources Memory Limit
    description: The resources Memory limit (in Mi, Gi, etc) for this build.
    required: true
    value: 256Mi
